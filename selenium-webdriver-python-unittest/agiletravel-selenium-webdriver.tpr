<project>
    <name>agiletravel-selenium-webdriver.tpr</name>
    <app_type>WinApp</app_type>
    <default_browser>Chrome</default_browser>
    <test_framework>Selenium</test_framework>
    <syntax_framework>PyTest</syntax_framework>
    <environments>
        <entry name="development" default="false">
            <base_url>http://agiletravel.herokuapp.com</base_url>
        </entry>
        <entry name="test" default="false">
            <base_url>http://test.agiletravel.macmini</base_url>
        </entry>
        <entry name="production" default="true">
            <base_url>https://travel.agileway.net</base_url>
        </entry>
        <entry name="ci1" default="false">
            <base_url>http://ci1.agiletravel.dev</base_url>
        </entry>
        <entry name="ci2" default="false">
            <base_url>http://ci2.agiletravel.dev</base_url>
        </entry>
    </environments>
    <exclude_dirs></exclude_dirs>
    <exclude_files>features/tmp_syntax_check.feature</exclude_files>
    <spec_template>import unittest
import xmlrunner
import time
import datetime
import sys
import os
from selenium import webdriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# load modules from parent dir, pages will be referred from there too.
sys.path.insert(0, os.path.dirname(os.path.realpath(__file__)) + "/../")
from test_helper import TestHelper

# import pages here 
# e.g. from pages.login_page import LoginPage

class {{ TestSuite }}TestCase(unittest.TestCase, TestHelper):

    @classmethod
    def setUpClass(cls):
        # open_browser method defined in test_helper.py
        cls.driver = cls.open_browser();  
        cls.driver.set_window_size(1280, 720)

    @classmethod
    def tearDownClass(cls):
        if not cls.is_debugging():
            cls.driver.quit()


    def setUp(self):
        self.driver.get(self.site_url())

    def test_{{ test_case }}(self):
        print("Add test statements here ...")</spec_template>
    <page_template>from abstract_page import AbstractPage

class {{ PAGE_NAME }}(AbstractPage):
  
  # define your page methods here ...</page_template>
    <integration>
        <jira url="" username="" password=""/>
    </integration>
</project>
